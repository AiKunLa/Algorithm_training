let arr = [1,'g',5,true,'f',false,[[1,2,3],[4,5,6],[7,8,9]]]

// 1.遍历数组
// 2.判断数组元素是否为数组
// 3.如果是数组，递归调用
// 4.如果不是数组，直接输出
let flat = function(arr){
  for(let i = 0; i < arr.length; i++){
    if(Array.isArray(arr[i]))
        flat(arr[i])
    else
        console.log(arr[i])
  }
}
flat(arr)

let arr1 = new Array(1,2,3,4,5,6,7,8,9)

// 数组的基本操作
// 1.添加元素
arr1.push(10) // 末尾添加元素
console.log(arr1); // [1,2,3,4,5,6,7,8,9,10]
arr1.unshift(0) // 开头添加元素
console.log(arr1); // [0,1,2,3,4,5,6,7,8,9,10]
arr1.splice(5,0,5.5) // 在索引为5的位置添加元素5.5
console.log(arr1); // [0,1,2,3,4,5.5,5,6,7,8,9,10]
arr1.splice(5,1,5.5) // 在索引为5的位置添加元素5.5,并删除原来的元素
console.log(arr1); // [0,1,2,3,4,5.5,6,7,8,9,10]
arr1.splice(5,1,5.5,5.6) // 在索引为5的位置添加元素5.5,5.6,并删除原来的元素
console.log(arr1); // [0,1,2,3,4,5.5,5.6,6,7,8,9,10]
arr1.splice(5,1,5.5,5.6,5.7) // 在索引为5的位置添加元素5.5,5.6,5.7,并删除原来的元素
console.log(arr1); // [0,1,2,3,4,5.5,5.6,5.7,6,7,8,9,10]

// 2.删除元素
arr1.pop() // 删除末尾元素

arr1.shift() // 删除开头元素

arr1.splice(5,1) // 删除索引为5的元素

arr1.splice(5,1,5.5,5.6,5.7) // 删除索引为5的元素,并添加元素5.5,5.6,5.7

// 3.修改元素
arr1[5] = 5.5 // 修改索引为5的元素为5.5
// 4.查找元素
console.log(arr1.indexOf(5.5)) // 查找元素5.5的索引
console.log(arr1.lastIndexOf(5.5)) // 查找元素5.5的索引,从后往前查找
console.log(arr1.includes(5.5)) // 查找元素5.5是否存在,返回true或false
// 5.排序
arr1.sort() // 排序
console.log(arr1); // [0,1,2,3,4,5.5,5.6,5.7,6,7,8,9,10]
arr1.sort((a,b)=>b-a) // 排序,从小到大
console.log(arr1); // [10,9,8,7,6,5.7,5.6,5.5,4,3,2,1,0]
// 6.反转
arr1.reverse() // 反转
// 7.拼接
arr1.concat([11,12,13]) // 拼接
console.log(arr1); // [10,9,8,7,6,5.7,5.6,5.5,4,3,2,1,0,11,12,13]
arr1.concat([11,12,13],14,15,16) // 拼接
console.log(arr1); // [10,9,8,7,6,5.7,5.6,5.5,4,3,2,1,0,11,12,13,14,15,16]



// 8.截取
arr1.slice(5,10) // 截取索引为5到10的元素,不包括10
console.log(arr1); // [10,9,8,7,6,5.7,5.6,5.5,4,3,2,1,0,11,12,13,14,15,16]

// 9.复制
arr1.copyWithin(5,10,15) // 复制索引为10到15的元素到索引为5的位置,不包括15
console.log(arr1); // [10,9,8,7,6,11,12,13,14,15,16,1,0,11,12,13,14,15,16]
// 10.清空
// 11.判断是否为数组
console.log(Array.isArray(arr1)); // true
// 12.数组长度
console.log(arr1.length); // 19
// 13.数组索引
console.log(arr1[5]); // 11
// 14.数组元素

// 15.数组元素个数

// 16.数组元素类型
// 17.数组元素最大值
let arr2 = [1,2,3,4,5,6,7,8,9,10]


// 18.数组元素最小值

// 19.数组元素平均值
// 20.数组元素求和
// 21.数组元素乘积
// 22.数组元素平均值    
let aver = arr2.reduce(a,b=>a+b)/arr2.length // 数组元素平均值

